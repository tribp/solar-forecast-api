#  Build and deploy Python app to Azure Web App - solar-forecast-api-dev.

name: Build & deploy Azure Web App - Dev

on:
  push:
    branches:
      - dev
    paths-ignore:
      - "*.md"
      - "Dockerfile"
      - "img/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OPENWEATHERMAP_API_KEY: ${{secrets.OPENWEATHERMAP_API_KEY}}
      SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL: "true"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python version
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          make install
      - name: Format code with black
        run: |
          make format
      - name: Lint with pylint
        run: |
          make lint
      - name: Test with pytest
        run: |
          make test

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            . 
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .

      - name: Check downloaded files and structure
        run: ls -R

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: "solar-forecast-api-dev"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_F0113A330FAD402CB768E1D2E03CDE29 }}
          clean: true
